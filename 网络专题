https://github.com/yangkun19921001/Blog/blob/master/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95/Android%E9%AB%98%E7%BA%A7%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/Android/%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81/%E7%BD%91%E7%BB%9C%E4%B8%93%E9%A2%98.md

https://sourcegraph.com/github.com/JsonChao/Awesome-Android-Notebook/-/blob/blog/2020%E5%B9%B4%E4%B8%AD%E9%AB%98%E7%BA%A7Android%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E7%A7%98%E7%B1%8D%EF%BC%8C%E4%B8%BA%E4%BD%A0%E4%BF%9D%E9%A9%BE%E6%8A%A4%E8%88%AA%E9%87%91%E4%B8%89%E9%93%B6%E5%9B%9B%EF%BC%8C%E7%9B%B4%E9%80%9A%E5%A4%A7%E5%8E%82.md



TCP与UDP有什么区别？


TCP/IP建立连接的过程


socket通信机制（封装了TCP+IP）


HTTP与HTTPS有什么区别？Http1.1和Http1.0及2.0的区别？

https://sourcegraph.com/github.com/JsonChao/Awesome-Android-Notebook/-/blob/blog/2020%E5%B9%B4%E4%B8%AD%E9%AB%98%E7%BA%A7Android%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E7%A7%98%E7%B1%8D%EF%BC%8C%E4%B8%BA%E4%BD%A0%E4%BF%9D%E9%A9%BE%E6%8A%A4%E8%88%AA%E9%87%91%E4%B8%89%E9%93%B6%E5%9B%9B%EF%BC%8C%E7%9B%B4%E9%80%9A%E5%A4%A7%E5%8E%82.md






Get与Post请求有什么区别？


OKhttp的使用

```
//1、获取okHttpClient
        OkHttpClient okHttpClient = new OkHttpClient.Builder()
                .readTimeout(5, TimeUnit.SECONDS)
//                .cache(new Cache())//添加缓存
                .build();
        new Thread(new Runnable() {
            @Override
            public void run() {
                //get请求
                //2.构造get请求
                Request getRequest = new Request.Builder().url("http:www.baidu.com").get().build();

                //3.构建Call结构
                Call call = okHttpClient.newCall(getRequest);

                //4.异步请求网络
                call.enqueue(new Callback() {
                    @Override
                    public void onFailure(@NotNull Call call, @NotNull IOException e) {
                        e.printStackTrace();
                    }

                    @Override
                    public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
                        if(response.isSuccessful()){
                            System.out.println(response.toString());
                        }
                    }
                });
            }
        },"okhttp get request").start();
 ```
